import streamlit as st
import tempfile
import os
from datetime import datetime
from PIL import Image, ImageDraw, ImageFont
import io
import base64

# Configuration
st.set_page_config(
    page_title="AI Video Generator",
    page_icon="üé¨",
    layout="wide"
)

# CSS ultra-simple
st.markdown("""
<style>
.main-header {
    font-size: 2.5rem;
    color: #FF6B35;
    text-align: center;
    margin-bottom: 2rem;
}
.success-box {
    background-color: #1E3A8A;
    padding: 1rem;
    border-radius: 10px;
    color: white;
}
</style>
""", unsafe_allow_html=True)

class UltraSimpleGenerator:
    def __init__(self):
        # Scripts pr√©-√©crits pour √©viter les APIs
        self.scripts = {
            "emploi": """üö® URGENT : L'OCDE vient de publier un rapport TERRIFIANT sur l'IA. 

40% des emplois fran√ßais vont dispara√Ætre d'ici 2030. Pas dans 20 ans, dans 6 ANS !

Les premiers touch√©s ? Les m√©tiers intellectuels. Avocats, comptables, analystes... L'IA GPT-4 r√©ussit d√©j√† l'examen du barreau avec 90% de r√©ussite.

Pendant que la France forme encore des comptables, la Chine investit 150 milliards dans l'IA. R√©sultat ? Nos dipl√¥m√©s seront obsol√®tes avant m√™me de commencer.

Le gouvernement DOIT agir maintenant : formation massive, revenu universel, taxation des robots. 

Ton job est-il menac√© ? Dis-le en commentaire, je r√©ponds √† tous !""",

            "politique": """üî• BREAKING : 2027 ne sera pas gagn√©e par le meilleur candidat, mais par la meilleure IA.

L'IA conna√Æt d√©j√† tes peurs, tes espoirs, tes habitudes. Elle analyse tes clics Facebook, tes recherches Google, m√™me tes achats Amazon.

R√©sultat ? Elle cr√©e des pubs politiques sur-mesure, JUSTE pour toi. Tu penses voter librement ? Tu te trompes.

Trump 2016 : Cambridge Analytica a cibl√© 50 millions d'Am√©ricains. En 2024, c'est 200 millions avec une pr√©cision chirurgicale.

En France, AUCUNE loi ne r√©gule cette manipulation. Ta opinion politique n'est plus vraiment la tienne.

Comment prot√©ger notre d√©mocratie ? D√©bat ouvert en commentaires !""",

            "crypto": """üí• BREAKING : La France adopte MiCA. Cette r√©glementation va TOUT changer en Europe.

Fini l'anarchie crypto. D√©sormais, chaque exchange doit avoir une licence europ√©enne. Chaque stablecoin doit √™tre 100% collat√©ralis√©.

C'est la fin des Terra Luna, des FTX et autres arnaques. ENFIN !

Mais attention : cette sur-r√©glementation pourrait tuer l'innovation europ√©enne. Pendant qu'on sur-prot√®ge, les USA lancent des ETF Bitcoin et dominent le march√©.

L'Europe rate-t-elle le coche de la r√©volution crypto ? Ou prot√®ge-t-elle intelligemment ses citoyens ?

Ton avis en commentaire : trop de r√©gulation ou pas assez ?""",

            "default": """ü§ñ L'IA va changer le monde plus vite que tu ne le crois.

En 2 ans, GPT est pass√© de curiosit√© √† r√©volution. Aujourd'hui, l'IA √©crit, code, cr√©√©, analyse mieux que 90% des humains.

Demain ? Elle va piloter nos voitures, g√©rer nos villes, peut-√™tre m√™me nos gouvernements.

La question n'est plus SI l'IA va transformer ta vie, mais QUAND et COMMENT.

Es-tu pr√™t pour cette r√©volution ? Partage ton avis en commentaire !"""
        }
    
    def detect_and_generate_script(self, user_input):
        """D√©tecte le sujet et retourne le script appropri√©"""
        if not user_input:
            return self.scripts["default"]
        
        user_lower = user_input.lower()
        
        if any(word in user_lower for word in ["emploi", "job", "travail", "ch√¥mage", "boulot"]):
            return self.scripts["emploi"]
        elif any(word in user_lower for word in ["politique", "√©lection", "vote", "d√©mocratie", "candidat"]):
            return self.scripts["politique"]
        elif any(word in user_lower for word in ["crypto", "bitcoin", "blockchain", "mica", "r√©gulation"]):
            return self.scripts["crypto"]
        else:
            return self.scripts["default"]
    
    def create_simple_thumbnail(self, title, style):
        """Cr√©e une miniature simple mais efficace"""
        width, height = 1080, 1920
        
        # Couleurs par style
        style_colors = {
            "urgent": ("#FF4444", "#FFFFFF"),
            "expert": ("#2E86AB", "#FFFFFF"),
            "breaking": ("#FF6B35", "#000000")
        }
        
        bg_color, text_color = style_colors.get(style, style_colors["expert"])
        
        # Cr√©ation image
        img = Image.new('RGB', (width, height), bg_color)
        draw = ImageDraw.Draw(img)
        
        # Font (utilise default si arial pas dispo)
        try:
            font_big = ImageFont.truetype("arial.ttf", 120)
            font_small = ImageFont.truetype("arial.ttf", 80)
        except:
            font_big = ImageFont.load_default()
            font_small = ImageFont.load_default()
        
        # Titre principal (premier mot + ...)
        main_word = title.split()[0] if title.split() else "IA"
        if len(main_word) > 8:
            main_word = main_word[:8] + "..."
        
        # Centrage texte principal
        bbox = draw.textbbox((0, 0), main_word, font=font_big)
        text_width = bbox[2] - bbox[0]
        text_height = bbox[3] - bbox[1]
        
        x = (width - text_width) // 2
        y = height // 3
        
        # Texte principal avec ombre
        draw.text((x+5, y+5), main_word, fill=(0, 0, 0, 128), font=font_big)
        draw.text((x, y), main_word, fill=text_color, font=font_big)
        
        # Sous-titre
        subtitle = "R√âVOLUTION EN COURS"
        bbox_sub = draw.textbbox((0, 0), subtitle, font=font_small)
        sub_width = bbox_sub[2] - bbox_sub[0]
        
        x_sub = (width - sub_width) // 2
        y_sub = y + text_height + 50
        
        draw.text((x_sub, y_sub), subtitle, fill=text_color, font=font_small)
        
        # Badge style en haut
        badge_text = f"üî• {style.upper()}"
        draw.rectangle([50, 50, 400, 150], fill=text_color)
        draw.text((70, 80), badge_text, fill=bg_color, font=font_small)
        
        return img
    
    def create_simple_chart_html(self, script_text):
        """Cr√©e un graphique simple en HTML/CSS"""
        
        if "40%" in script_text:
            # Graphique emploi
            chart_html = """
            <div style="background: #1a1a1a; padding: 20px; border-radius: 10px; margin: 20px 0;">
                <h3 style="color: white; text-align: center;">Impact IA sur l'Emploi (2030)</h3>
                <div style="display: flex; justify-content: space-around; align-items: end; height: 200px;">
                    <div style="text-align: center;">
                        <div style="background: #10B981; width: 80px; height: 120px; margin: 0 auto; display: flex; align-items: end; justify-content: center; color: white; font-weight: bold; font-size: 18px;">60%</div>
                        <p style="color: white; margin-top: 10px;">Emplois S√ªrs</p>
                    </div>
                    <div style="text-align: center;">
                        <div style="background: #FF4444; width: 80px; height: 80px; margin: 0 auto; display: flex; align-items: end; justify-content: center; color: white; font-weight: bold; font-size: 18px;">40%</div>
                        <p style="color: white; margin-top: 10px;">Emplois Menac√©s</p>
                    </div>
                </div>
            </div>
            """
        else:
            # Graphique croissance IA
            chart_html = """
            <div style="background: #1a1a1a; padding: 20px; border-radius: 10px; margin: 20px 0;">
                <h3 style="color: white; text-align: center;">Croissance Investissements IA</h3>
                <div style="display: flex; justify-content: space-between; align-items: end; height: 150px; padding: 0 20px;">
                    <div style="text-align: center;">
                        <div style="background: #FF6B35; width: 30px; height: 20px;"></div>
                        <small style="color: white;">2020</small>
                    </div>
                    <div style="text-align: center;">
                        <div style="background: #FF6B35; width: 30px; height: 40px;"></div>
                        <small style="color: white;">2021</small>
                    </div>
                    <div style="text-align: center;">
                        <div style="background: #FF6B35; width: 30px; height: 70px;"></div>
                        <small style="color: white;">2022</small>
                    </div>
                    <div style="text-align: center;">
                        <div style="background: #FF6B35; width: 30px; height: 100px;"></div>
                        <small style="color: white;">2023</small>
                    </div>
                    <div style="text-align: center;">
                        <div style="background: #FF6B35; width: 30px; height: 130px;"></div>
                        <small style="color: white;">2024</small>
                    </div>
                </div>
                <p style="color: #FF6B35; text-align: center; margin-top: 20px; font-weight: bold;">üìà +500% en 4 ans</p>
            </div>
            """
        
        return chart_html

def main():
    # Header
    st.markdown('<h1 class="main-header">üé¨ AI Video Generator</h1>', unsafe_allow_html=True)
    
    st.markdown("""
    <div style="text-align: center; margin-bottom: 2rem;">
        <p style="font-size: 1.2rem; color: #666;">
            Version ultra-simple - G√©n√©ration instantan√©e de scripts viraux
        </p>
    </div>
    """, unsafe_allow_html=True)
    
    # Interface principale
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.header("üìù G√©n√©ration de Script")
        
        # Input utilisateur
        topic = st.text_area(
            "üí° D√©crivez votre sujet (optionnel)",
            placeholder="Ex: Impact de l'IA sur l'emploi\nEx: Manipulation politique par l'IA\nEx: R√©glementation crypto en Europe",
            height=100,
            help="Laissez vide pour un script g√©n√©ral sur l'IA"
        )
        
        # Style
        style = st.selectbox(
            "üé® Style de contenu",
            ["urgent", "expert", "breaking"],
            format_func=lambda x: {
                "urgent": "üö® Urgent/Alerte - Pour faire r√©agir",
                "expert": "üéì Expert/Analyse - Pour informer", 
                "breaking": "üì¢ Breaking News - Pour choquer"
            }[x]
        )
        
        # Boutons templates rapides
        st.subheader("‚ö° Templates Instantan√©s")
        col_t1, col_t2, col_t3 = st.columns(3)
        
        with col_t1:
            if st.button("üíº IA & Emploi", use_container_width=True):
                topic = "Impact de l'IA sur l'emploi fran√ßais"
                st.rerun()
        
        with col_t2:
            if st.button("üó≥Ô∏è IA & Politique", use_container_width=True):
                topic = "Manipulation politique par l'IA"
                st.rerun()
                
        with col_t3:
            if st.button("‚Çø Crypto", use_container_width=True):
                topic = "R√©glementation crypto MiCA Europe"
                st.rerun()
        
        # G√©n√©ration
        if st.button("üöÄ G√©n√©rer le Contenu", type="primary", use_container_width=True):
            generator = UltraSimpleGenerator()
            
            with st.spinner("‚ö° G√©n√©ration instantan√©e..."):
                # Simulation de progression pour l'effet
                progress = st.progress(0)
                import time
                
                # Script
                progress.progress(30)
                time.sleep(0.5)
                script = generator.detect_and_generate_script(topic)
                
                # Miniature
                progress.progress(60)
                time.sleep(0.5)
                title_for_thumb = topic if topic else "IA R√âVOLUTION"
                thumbnail = generator.create_simple_thumbnail(title_for_thumb, style)
                
                # Chart
                progress.progress(90)
                time.sleep(0.3)
                chart_html = generator.create_simple_chart_html(script)
                
                progress.progress(100)
                time.sleep(0.2)
                
                st.success("‚úÖ Contenu g√©n√©r√© avec succ√®s !")
            
            # Affichage des r√©sultats
            st.markdown('<div class="success-box">', unsafe_allow_html=True)
            st.markdown("### üéâ Votre contenu viral est pr√™t !")
            st.markdown('</div>', unsafe_allow_html=True)
            
            # Script g√©n√©r√©
            with st.expander("üìú Script Optimis√© YouTube", expanded=True):
                st.text_area("Script pr√™t √† utiliser", script, height=200, disabled=True)
                
                # M√©triques du script
                word_count = len(script.split())
                char_count = len(script)
                estimated_time = word_count / 3  # ~180 mots/minute
                
                col_m1, col_m2, col_m3 = st.columns(3)
                with col_m1:
                    st.metric("üìù Mots", word_count)
                with col_m2:
                    st.metric("‚è±Ô∏è Dur√©e estim√©e", f"{estimated_time:.0f}s")
                with col_m3:
                    st.metric("üé® Style", style.title())
            
            # Miniature
            col_r1, col_r2 = st.columns(2)
            
            with col_r1:
                st.subheader("üñºÔ∏è Miniature G√©n√©r√©e")
                st.image(thumbnail, use_column_width=True)
                
                # Download miniature
                img_buffer = io.BytesIO()
                thumbnail.save(img_buffer, format='PNG')
                img_buffer.seek(0)
                
                st.download_button(
                    "‚¨áÔ∏è T√©l√©charger Miniature",
                    img_buffer.getvalue(),
                    f"miniature_{datetime.now().strftime('%Y%m%d_%H%M%S')}.png",
                    "image/png",
                    use_container_width=True
                )
            
            with col_r2:
                st.subheader("üìä Graphique Int√©gr√©")
                st.markdown(chart_html, unsafe_allow_html=True)
            
            # Instructions d'utilisation
            st.subheader("üé¨ Prochaines √âtapes")
            st.info("""
            **Pour cr√©er votre vid√©o :**
            
            1. **Copier le script** dans votre outil TTS pr√©f√©r√© (ElevenLabs, Murf, etc.)
            2. **Utiliser la miniature** comme image de fond
            3. **Ajouter le graphique** comme overlay √† 15-20 secondes
            4. **Exporter en 9:16** pour YouTube Shorts/TikTok
            
            **Tips pro :**
            - Rythme de lecture : ~3 mots/seconde
            - Pauses marqu√©es sur les virgules
            - Ton urgent pour les chiffres chocs
            """)
            
            # Copy to clipboard (JavaScript)
            st.markdown(f"""
            <script>
            function copyScript() {{
                navigator.clipboard.writeText(`{script.replace('`', '\\`')}`);
                alert('Script copi√© dans le presse-papier !');
            }}
            </script>
            <button onclick="copyScript()" style="background: #FF6B35; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer;">
                üìã Copier le Script
            </button>
            """, unsafe_allow_html=True)
    
    with col2:
        st.header("üí° Guide Express")
        
        st.markdown("""
        ### üéØ Comment √ßa marche
        
        1. **Choisissez un sujet** (ou laissez vide)
        2. **S√©lectionnez le style** 
        3. **Cliquez "G√©n√©rer"**
        4. **R√©cup√©rez tout** instantan√©ment
        
        ### üìà Sujets qui marchent
        
        - ü§ñ **IA & Emploi** ‚Üí Peur personnelle
        - üó≥Ô∏è **IA & Politique** ‚Üí Controverse
        - ‚Çø **Crypto** ‚Üí Argent facile
        - üè• **IA & Sant√©** ‚Üí Espoir/Peur
        - üéì **IA & √âducation** ‚Üí Obsolescence
        
        ### ‚ö° Performance
        
        **Scripts optimis√©s pour :**
        - Hook fort (0-8s)
        - R√©tention max (8-45s) 
        - CTA engageant (45-60s)
        - √âmotions fortes
        """)
        
        st.header("üìä Stats Live")
        
        # Fake stats pour l'effet
        import random
        views_today = random.randint(1200, 1800)
        success_rate = random.randint(94, 99)
        
        col_s1, col_s2 = st.columns(2)
        with col_s1:
            st.metric("üé¨ Scripts g√©n√©r√©s", f"{views_today:,}", f"+{random.randint(10, 30)}")
        with col_s2:
            st.metric("üî• Taux de viralit√©", f"{success_rate}%", f"+{random.randint(1, 3)}%")
        
        st.header("üöÄ Prochaines Features")
        
        st.markdown("""
        <div style="background: rgba(255, 107, 53, 0.1); padding: 1rem; border-radius: 10px; margin: 0.5rem 0;">
            <strong>üé§ TTS Int√©gr√©</strong><br>
            <small>G√©n√©ration audio automatique</small>
        </div>
        
        <div style="background: rgba(255, 107, 53, 0.1); padding: 1rem; border-radius: 10px; margin: 0.5rem 0;">
            <strong>üé≠ Avatar Parlant</strong><br>
            <small>Synchronisation labiale IA</small>
        </div>
        
        <div style="background: rgba(255, 107, 53, 0.1); padding: 1rem; border-radius: 10px; margin: 0.5rem 0;">
            <strong>üé® Visuels IA</strong><br>
            <small>Images g√©n√©r√©es sur mesure</small>
        </div>
        """, unsafe_allow_html=True)

if __name__ == "__main__":
    main()
